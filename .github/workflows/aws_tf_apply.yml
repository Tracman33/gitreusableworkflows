name: terraform-apply

on:
  workflow_call:
    inputs:
        path:
            description: 'Specifies the path of the root terraform module.'
            required: true
            type: string
        tf_version:
            description: "Specifies version of Terraform to use. eg: 1.1.0 Default=latest."
            required: false
            type: string
            default: latest
        gh_environment:
            description: "Specifies the Github deployment environment"
            required: false
            type: string
            default: null
        tf_vars_file:
            description: "Specifies the Terraform TFVARS file"
            required: true
            type: string
    secrets:
            cli_config_credentials_token:
                description: "cli config credentials token"
                required: true

jobs:
  terraform-apply-1:
    runs-on: ubuntu-latest

    environment: ${{inputs.gh_environment}}
      ### --------------------------------------------------
      ### Find and Replace - YAML anchors are not supported
      #TF_VAR_app_name: ${{ secrets.APP_NAME }}
      #TF_VAR_region: ${{ secrets.AWS_REGION }}
      #AWS_REGION: ${{ secrets.AWS_REGION }}
      #AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}

    defaults: 
        run:
            shell: bash
            working-directory: ${{inputs.path}}
    steps:
      - name: Checkout
        uses: actions/checkout@v3.1.0

      - name: Change file name
        run: |
            mv ${{github.workspace}}/${{inputs.path}}/${{inputs.gh_environment}}.tfvars  ${{github.workspace}}/${{inputs.path}}/${{inputs.gh_environment}}.auto.tfvars
    
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2.0.2 
        with:
          terraform_version: ${{inputs.tf_version}}
          cli_config_credentials_token: ${{secrets.cli_config_credentials_token}}

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Validate
        id: valid
        run: terraform validate

      - name: Terraform Plan
        id: plan
        run: terraform plan
        continue-on-error: true

      - name: Terraforom Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Terraform Apply
        id: apply
        run: terraform apply -auto-approve
      
